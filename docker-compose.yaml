version: '3'


services:

  nats-server:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222" # Podemos dejar esto para ver si hay conexiones
      - "6222:6222"

  postgres:
    image: postgres:15
    restart: always
    container_name: orders_database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=devops
      - POSTGRES_PASSWORD=avengers
      - POSTGRES_DB=ordersdb
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data

  client-gateway:
    build: ./client-gateway
    ports:
      - "${CLIENT_GATEWAY_PORT}:3000"
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222

  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - DATABASE_URL=file:./dev.db
      - NATS_SERVERS=nats://nats-server:4222

  orders-ms:
    depends_on:
      - postgres
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://devops:avengers@postgres:5432/ordersdb?schema=public
      - NATS_SERVERS=nats://nats-server:4222

  payments-ms:
    container_name: payments-ms
    build: ./payments-ms
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - "${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}"
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
      - NATS_SERVERS=nats://nats-server:4222